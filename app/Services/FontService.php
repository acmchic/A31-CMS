<?php

namespace App\Services;

use App\Models\SystemSetting;

class FontService
{
    /**
     * Get the current font CSS file path
     */
    public static function getFontCssPath()
    {
        $fontFamily = SystemSetting::getFontFamily();
        
        // Generate dynamic CSS file
        self::generateDynamicFontCss($fontFamily);
        
        return 'css/dynamic-font.css';
    }

    /**
     * Generate dynamic font CSS file
     */
    public static function generateDynamicFontCss($fontFamily)
    {
        $backgroundColor = SystemSetting::getBackgroundColor();
        
        $cssContent = "/* Dynamic Font & Background CSS - Generated by System */\n\n";
        
        // Map font names to actual font families
        $fontMap = [
            'Inter' => "'Segoe UI', 'Helvetica Neue', Arial, sans-serif",
            'Roboto' => "'Segoe UI', 'Helvetica Neue', Arial, sans-serif", 
            'Tahoma' => "'Tahoma', Arial, sans-serif",
            'Helvetica' => "'Helvetica', Arial, sans-serif",
            'Arial' => "'Arial', sans-serif"
        ];
        
        $fontFamilyCss = $fontMap[$fontFamily] ?? "'Segoe UI', 'Helvetica Neue', Arial, sans-serif";
        
        // Background color styles
        $cssContent .= "/* Apply background color globally */\n";
        $cssContent .= "body {\n";
        $cssContent .= "    background-color: {$backgroundColor} !important;\n";
        $cssContent .= "}\n\n";
        
        $cssContent .= ".page {\n";
        $cssContent .= "    background-color: {$backgroundColor} !important;\n";
        $cssContent .= "}\n\n";
        
        $cssContent .= ".page-wrapper {\n";
        $cssContent .= "    background-color: {$backgroundColor} !important;\n";
        $cssContent .= "}\n\n";
        
        $cssContent .= ".page-body {\n";
        $cssContent .= "    background-color: {$backgroundColor} !important;\n";
        $cssContent .= "}\n\n";
        
        $cssContent .= ".container-fluid {\n";
        $cssContent .= "    background-color: {$backgroundColor} !important;\n";
        $cssContent .= "}\n\n";
        
        // Font styles
        $cssContent .= "/* Apply {$fontFamily} font globally */\n";
        $cssContent .= "*:not([class*=\"la-\"]):not([class*=\"fa-\"]):not([class*=\"icon-\"]):not(.icon):not(i) {\n";
        $cssContent .= "    font-family: {$fontFamilyCss} !important;\n";
        $cssContent .= "}\n\n";
        
        $cssContent .= "body, html {\n";
        $cssContent .= "    font-family: {$fontFamilyCss} !important;\n";
        $cssContent .= "}\n\n";
        
        $cssContent .= "h1, h2, h3, h4, h5, h6 {\n";
        $cssContent .= "    font-family: {$fontFamilyCss} !important;\n";
        $cssContent .= "}\n\n";
        
        $cssContent .= "input, textarea, select, button {\n";
        $cssContent .= "    font-family: {$fontFamilyCss} !important;\n";
        $cssContent .= "}\n\n";
        
        $cssContent .= "table, th, td {\n";
        $cssContent .= "    font-family: {$fontFamilyCss} !important;\n";
        $cssContent .= "}\n\n";
        
        $cssContent .= ".navbar, .nav-link, .navbar-brand {\n";
        $cssContent .= "    font-family: {$fontFamilyCss} !important;\n";
        $cssContent .= "}\n\n";
        
        $cssContent .= ".card, .card-header, .card-body, .card-footer {\n";
        $cssContent .= "    font-family: {$fontFamilyCss} !important;\n";
        $cssContent .= "}\n\n";
        
        $cssContent .= ".btn {\n";
        $cssContent .= "    font-family: {$fontFamilyCss} !important;\n";
        $cssContent .= "}\n\n";
        
        $cssContent .= ".modal, .dropdown-menu, .dropdown-item {\n";
        $cssContent .= "    font-family: {$fontFamilyCss} !important;\n";
        $cssContent .= "}\n";
        
        // Write to file
        file_put_contents(public_path('css/dynamic-font.css'), $cssContent);
    }

    /**
     * Get available fonts
     */
    public static function getAvailableFonts()
    {
        return [
            'Inter' => 'Inter',
            'Roboto' => 'Roboto', 
            'Tahoma' => 'Tahoma',
            'Helvetica' => 'Helvetica',
            'Arial' => 'Arial'
        ];
    }
}
